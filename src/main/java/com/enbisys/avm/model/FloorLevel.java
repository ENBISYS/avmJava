/*
 * AVM
 * This is api for AVM (automated valuation machine)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@enbisys.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.enbisys.avm.model;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Floor level
 */
@JsonAdapter(FloorLevel.Adapter.class)
public enum FloorLevel {
  
  BASEMENT("basement"),
  
  GROUND("ground"),
  
  MIDDLE("middle"),
  
  TOP("top"),
  
  FLOOR_1("floor_1"),
  
  FLOOR_2("floor_2"),
  
  FLOOR_3("floor_3"),
  
  FLOOR_4("floor_4"),
  
  FLOOR_5("floor_5"),
  
  FLOOR_6("floor_6"),
  
  FLOOR_7("floor_7"),
  
  FLOOR_8("floor_8"),
  
  FLOOR_9("floor_9"),
  
  FLOOR_10("floor_10"),
  
  FLOOR_11("floor_11"),
  
  FLOOR_12("floor_12"),
  
  FLOOR_13("floor_13"),
  
  FLOOR_14("floor_14"),
  
  FLOOR_15("floor_15"),
  
  FLOOR_16("floor_16"),
  
  FLOOR_17("floor_17"),
  
  FLOOR_18("floor_18"),
  
  FLOOR_19("floor_19"),
  
  FLOOR_20("floor_20"),
  
  FLOOR_21_OR_ABOVE("floor_21_or_above");

  private String value;

  FloorLevel(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static FloorLevel fromValue(String value) {
    for (FloorLevel b : FloorLevel.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<FloorLevel> {
    @Override
    public void write(final JsonWriter jsonWriter, final FloorLevel enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public FloorLevel read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return FloorLevel.fromValue(value);
    }
  }
}

